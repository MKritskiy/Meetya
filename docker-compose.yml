services:
  notifications.web:
    image: ${DOCKER_REGISTRY-}notificationsweb
    build:
      context: .
      dockerfile: Notifications.RabbitMQ/Notification.Web/Dockerfile
    environment:
      - RabbitMQ__Host=rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
   


  files.web:
    image: ${DOCKER_REGISTRY-}filesweb
    build:
      context: .
      dockerfile: Files.API/Files.Web/Dockerfile
    environment:
      - Storage__BaseUrl=http://yarp.gateway:8080/web-files/api/files/static
    ports:
      - "50005:8080"

  events.web:
    image: ${DOCKER_REGISTRY-}eventsweb
    build:
      context: .
      dockerfile: Events.API/Events.Web/Dockerfile
    environment:
      - ConnectionStrings__ConnectionString=Host=events.db;Port=5432;Database=EventsDB;Username=postgres;Password=Pass1234
    depends_on:
      - events.db
    ports:
      - "50004:8080"

  friends.web:
    image: ${DOCKER_REGISTRY-}friendsweb
    build:
      context: .
      dockerfile: Friend.API/Friend.Web/Dockerfile
    environment:
      - ConnectionStrings__ConnectionString=Host=friends.db;Port=5432;Database=FriendsDB;Username=postgres;Password=Pass1234
    depends_on:
      - friends.db
    ports:
      - "50003:8080"

  users.web:
    image: ${DOCKER_REGISTRY-}usersweb
    build:
      context: .
      dockerfile: User.API/User.Web/Dockerfile
    environment:
      - ConnectionStrings__ConnectionString=Host=users.db;Port=5432;Database=UsersDB;Username=postgres;Password=Pass1234
      - ConnectionStrings__Redis=redis:6379,password=your_strong_password
      - RabbitMQ__Host=rabbitmq
    depends_on:
      - users.db
      - rabbitmq
      - redis
    ports:
      - "50002:8080"

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass your_strong_password

  messages.web:
    image: ${DOCKER_REGISTRY-}messagesweb
    build:
      context: .
      dockerfile: Messages.API/Messages.Web/Dockerfile
    environment:
      - ConnectionStrings__ConnectionString=Host=messages.db;Port=5432;Database=MessagesDB;Username=postgres;Password=Pass1234
    depends_on:
      - messages.db
      - users.web
      - events.web
    ports:
      - "50001:8080"

  yarp.gateway:
    image: ${DOCKER_REGISTRY-}yarpgateway
    build:
      context: .
      dockerfile: Yarp.Gateway/Dockerfile
    environment:
      - Tls__Pass=${TLS_PASS}
    ports:
      - "8080:8080"
      - "443:443"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  events.db:
    image: postgres
    environment:
      POSTGRES_DB: EventsDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pass1234
    ports:
      - "5432:5432"

  friends.db:
    image: postgres
    environment:
      POSTGRES_DB: FriendsDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pass1234
    ports:
      - "5433:5432"

  users.db:
    image: postgres
    environment:
      POSTGRES_DB: UsersDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pass1234
    ports:
      - "5434:5432"

  messages.db:
    image: postgres
    environment:
      POSTGRES_DB: MessagesDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Pass1234
    ports:
      - "5435:5432"

volumes:
  redis_data: